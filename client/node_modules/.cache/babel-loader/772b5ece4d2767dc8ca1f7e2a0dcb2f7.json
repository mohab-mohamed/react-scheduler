{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { pie, scaleOrdinal, schemeCategory10, arc } from 'd3';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".donut .arc {\\n  cursor: pointer;\\n  transition: 1s;\\n}\\n.donut .arc:hover {\\n  opacity: 0.9;\\n}\\n\";\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Donut = function (_Component) {\n  inherits(Donut, _Component);\n\n  function Donut(props) {\n    classCallCheck(this, Donut);\n\n    var _this = possibleConstructorReturn(this, (Donut.__proto__ || Object.getPrototypeOf(Donut)).call(this, props));\n\n    _this.resize = function () {\n      if (_this.donut.current) {\n        _this.setState({\n          width: _this.donut.current.clientWidth //responsive chart width\n\n        });\n      }\n    };\n\n    _this.mouseoverArc = function (e, d, total) {\n      _this.setState({\n        value: d.data.value,\n        title: d.data.title,\n        percentage: roundPercentage(d.data.value / total) + \"%\"\n      });\n\n      _this.props.onArcMouseOverHandler(e, d);\n    };\n\n    _this.mouseoutArc = function (e) {\n      _this.setState({\n        value: \"\",\n        title: \"\",\n        percentage: \"\"\n      });\n\n      _this.props.onArcMouseOutHandler(e);\n    };\n\n    _this.renderArc = function (d, i, radius, total) {\n      return React.createElement(Arc, {\n        key: i,\n        outerRadius: radius,\n        innerRadius: radius / _this.props.outerToInnerRadiiRatio,\n        d: d,\n        total: total,\n        mouseover: _this.mouseoverArc,\n        mouseout: _this.mouseoutArc,\n        onclick: _this.props.onArcClickHandler,\n        fill: _this.props.colorScale(i)\n      });\n    };\n\n    _this.state = {\n      width: 500,\n      value: \"\",\n      title: \"\",\n      percentage: \"\"\n    };\n    _this.donut = React.createRef();\n    return _this;\n  }\n\n  createClass(Donut, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.resize); //add resize listener for responsiveness\n\n      this.resize(); //initial resize\n    }\n  }, {\n    key: 'renderKey',\n    value: function renderKey(d, i, total) {\n      return React.createElement('g', {\n        key: i,\n        transform: \"translate(0,\" + i * this.props.keyRowSeparation + \")\"\n      }, React.createElement('rect', {\n        className: 'key',\n        fill: this.props.colorScale(i),\n        x: '0',\n        y: '0',\n        width: this.props.keyRectSize,\n        height: this.props.keyRectSize\n      }), React.createElement('text', {\n        transform: \"translate(\" + this.props.keyTextOffsetX + \",\" + this.props.keyTextOffsetY + \")\",\n        fontSize: this.props.keyFontSize\n      }, d.data.title, ' | ', d.data.value, ' | ', roundPercentage(d.data.value / total) + \"%\"));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          data = _props.data,\n          maxDiameter = _props.maxDiameter,\n          showKey = _props.showKey,\n          keyRowSeparation = _props.keyRowSeparation;\n      var diameter = Math.min(this.state.width, maxDiameter);\n      var x = this.state.width / 2;\n      var y = diameter / 2;\n      var pie$$1 = pie().value(function (d) {\n        return d.value;\n      });\n      var total = data.reduce(function (a, b) {\n        return a + b.value;\n      }, 0);\n      return React.createElement('div', {\n        ref: this.donut\n      }, React.createElement('svg', {\n        className: 'donut',\n        width: this.state.width,\n        height: diameter\n      }, React.createElement('g', {\n        transform: 'translate(' + x + ', ' + y + ')'\n      }, pie$$1(data).map(function (d, i) {\n        return _this2.renderArc(d, i, diameter / 2, total);\n      }), React.createElement('g', null, React.createElement('text', {\n        textAnchor: 'middle',\n        transform: \"translate(0,\" + diameter / 25 + \")\",\n        style: {\n          fontSize: diameter / 12 + \"px\"\n        }\n      }, this.state.percentage), React.createElement('text', {\n        textAnchor: 'middle',\n        transform: \"translate(0,\" + -2 * diameter / 25 + \")\",\n        style: {\n          fontSize: diameter / 25 + \"px\"\n        }\n      }, this.state.title), React.createElement('text', {\n        textAnchor: 'middle',\n        transform: \"translate(0,\" + 4 * diameter / 25 + \")\",\n        style: {\n          fontSize: diameter / 12 + \"px\"\n        }\n      }, typeof this.state.value === \"string\" ? \"\" : roundNumber(this.state.value))))), showKey ? React.createElement('svg', {\n        width: this.state.width,\n        height: data.length * keyRowSeparation\n      }, pie$$1(this.props.data).map(function (d, i) {\n        return _this2.renderKey(d, i, total);\n      })) : null);\n    }\n  }]);\n  return Donut;\n}(Component);\n\nDonut.propTypes = {\n  data: PropTypes.array.isRequired,\n  //data: [ {value: number, title: string}, ... ]\n  colorScale: PropTypes.func,\n  onArcMouseOverHandler: PropTypes.func,\n  onArcMouseOutHandler: PropTypes.func,\n  onArcClickHandler: PropTypes.func,\n  maxDiameter: PropTypes.number,\n  outerToInnerRadiiRatio: PropTypes.number,\n  showKey: PropTypes.bool,\n  keyTextOffsetX: PropTypes.number,\n  keyTextOffsetY: PropTypes.number,\n  keyFontSize: PropTypes.number,\n  keyRowSeparation: PropTypes.number,\n  keyRectSize: PropTypes.number\n};\nDonut.defaultProps = {\n  colorScale: scaleOrdinal(schemeCategory10),\n  onArcMouseOverHandler: function onArcMouseOverHandler(e, d) {},\n  onArcMouseOutHandler: function onArcMouseOutHandler(e, d) {},\n  onArcClickHandler: function onArcClickHandler(e, d) {},\n  maxDiameter: 500,\n  outerToInnerRadiiRatio: 2,\n  showKey: true,\n  keyTextOffsetX: 20,\n  keyTextOffsetY: 14,\n  keyFontSize: 16,\n  keyRowSeparation: 20,\n  keyRectSize: 16\n};\n\nvar Arc = function (_Component2) {\n  inherits(Arc, _Component2);\n\n  function Arc() {\n    classCallCheck(this, Arc);\n    return possibleConstructorReturn(this, (Arc.__proto__ || Object.getPrototypeOf(Arc)).apply(this, arguments));\n  }\n\n  createClass(Arc, [{\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props2 = this.props,\n          d = _props2.d,\n          fill = _props2.fill,\n          total = _props2.total,\n          innerRadius = _props2.innerRadius,\n          outerRadius = _props2.outerRadius;\n      var arc$$1 = arc().innerRadius(innerRadius).outerRadius(outerRadius);\n      return React.createElement('path', {\n        className: 'arc',\n        d: arc$$1(d),\n        fill: fill,\n        onClick: function onClick(e) {\n          return _this4.props.onclick(e, d);\n        },\n        onMouseOver: function onMouseOver(e) {\n          return _this4.props.mouseover(e, d, _this4.props.total);\n        },\n        onMouseOut: function onMouseOut(e) {\n          return _this4.props.mouseout(e);\n        }\n      }, React.createElement('title', null, d.data.title, ' - ', d.value, ' - ', roundPercentage(d.value / total), '%'));\n    }\n  }]);\n  return Arc;\n}(Component);\n\nfunction roundNumber(number) {\n  return Math.round(100 * number) / 100;\n}\n\nfunction roundPercentage(number) {\n  return Math.round(10000 * number) / 100;\n}\n\nexport default Donut;","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"names":["Donut","Component","propTypes","PropTypes","number","defaultProps","d3","React","d","roundPercentage","value","title","percentage","radius","i","total","data","maxDiameter","showKey","keyRowSeparation","diameter","Math","x","y","pie","a","b","fontSize","roundNumber","Arc","fill","innerRadius","outerRadius","arc"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport * as d3 from \"d3\";\n\nimport \"./styles.css\";\n\nexport default class Donut extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired, //data: [ {value: number, title: string}, ... ]\n\n    colorScale: PropTypes.func,\n    onArcMouseOverHandler: PropTypes.func,\n    onArcMouseOutHandler: PropTypes.func,\n    onArcClickHandler: PropTypes.func,\n    maxDiameter: PropTypes.number,\n    outerToInnerRadiiRatio: PropTypes.number,\n    showKey: PropTypes.bool,\n    keyTextOffsetX: PropTypes.number,\n    keyTextOffsetY: PropTypes.number,\n    keyFontSize: PropTypes.number,\n    keyRowSeparation: PropTypes.number,\n    keyRectSize: PropTypes.number,\n  }\n\n  static defaultProps = {\n    colorScale: d3.scaleOrdinal(d3.schemeCategory10),\n    onArcMouseOverHandler: function(e, d) {},\n    onArcMouseOutHandler:  function(e, d) {},\n    onArcClickHandler:  function(e, d) {},\n    maxDiameter: 500,\n    outerToInnerRadiiRatio: 2,\n    showKey: true,\n    keyTextOffsetX: 20,\n    keyTextOffsetY: 14,\n    keyFontSize: 16,\n    keyRowSeparation: 20,\n    keyRectSize: 16,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 500,\n      value: \"\",\n      title: \"\",\n      percentage: \"\",\n    };\n\n    this.donut = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.resize); //add resize listener for responsiveness\n\n    this.resize(); //initial resize\n  }\n\n  resize = () => {\n    if(this.donut.current) {\n      this.setState({\n        width: this.donut.current.clientWidth, //responsive chart width\n      });\n    }\n  }\n\n  mouseoverArc = (e, d, total) => {\n    this.setState({\n      value: d.data.value,\n      title: d.data.title,\n      percentage: roundPercentage(d.data.value/total)+\"%\"\n    });\n\n    this.props.onArcMouseOverHandler(e, d)\n  }\n\n  mouseoutArc = e => {\n    this.setState({value: \"\", title: \"\", percentage: \"\"});\n\n    this.props.onArcMouseOutHandler(e)\n  }\n\n\n  renderArc = (d, i, radius, total) => {\n    return (\n      <Arc key={i}\n        outerRadius={radius}\n        innerRadius={radius / this.props.outerToInnerRadiiRatio}\n        d={d}\n        total={total}\n        mouseover={this.mouseoverArc}\n        mouseout={this.mouseoutArc}\n        onclick={this.props.onArcClickHandler}\n        fill={this.props.colorScale(i)}\n      />\n    );\n  }\n\n  renderKey(d, i, total) {\n    return (\n      <g key={i} transform={\"translate(0,\"+(i*this.props.keyRowSeparation)+\")\"}>\n        <rect className=\"key\" fill={this.props.colorScale(i)} x=\"0\" y=\"0\" width={this.props.keyRectSize} height={this.props.keyRectSize}></rect>\n        <text transform={\"translate(\"+this.props.keyTextOffsetX+\",\"+this.props.keyTextOffsetY+\")\"} fontSize={this.props.keyFontSize}>\n        {d.data.title} | {d.data.value} | {roundPercentage(d.data.value/total)+\"%\"}\n        </text>\n      </g>\n    );\n  }\n\n\n  render() {\n    const {data, maxDiameter, showKey, keyRowSeparation} = this.props;\n\n    let diameter = Math.min(this.state.width, maxDiameter);\n\n    let x = this.state.width / 2;\n    let y = diameter / 2;\n\n    let pie = d3.pie().value(d => d.value);\n    let total = data.reduce((a, b) => a + b.value, 0);\n\n    return (\n      <div ref={this.donut}>\n        <svg className=\"donut\" width={this.state.width} height={diameter}>\n          <g transform={`translate(${x}, ${y})`}>\n            {pie(data).map((d, i) => this.renderArc(d, i, diameter/2, total))}\n\n            <g>\n            <text textAnchor=\"middle\" transform={\"translate(0,\"+(diameter/25)+\")\"} style={{fontSize:diameter/12+\"px\"}}>{this.state.percentage}</text>\n              <text textAnchor=\"middle\" transform={\"translate(0,\"+(-2*diameter/25)+\")\"} style={{fontSize:diameter/25+\"px\"}}>{this.state.title}</text>\n              <text textAnchor=\"middle\" transform={\"translate(0,\"+(4*diameter/25)+\")\"} style={{fontSize:diameter/12+\"px\"}}>{typeof this.state.value===\"string\" ? \"\" : roundNumber(this.state.value)}</text>\n            </g>\n          </g>\n        </svg>\n\n        {\n          showKey ?\n          (\n            <svg width={this.state.width} height={data.length*keyRowSeparation}>\n              {pie(this.props.data).map((d, i) => this.renderKey(d, i, total))}\n            </svg>\n          ) :\n          null\n        }\n      </div>\n    );\n  }\n}\n\n\nclass Arc extends Component {\n  render() {\n    const {d, fill, total, innerRadius , outerRadius} = this.props;\n\n    let arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n\n    return (\n      <path className=\"arc\" d={arc(d)} fill={fill} onClick={e => this.props.onclick(e, d)} onMouseOver={e => this.props.mouseover(e, d, this.props.total)} onMouseOut={e => this.props.mouseout(e)}>\n        <title>{d.data.title} - {d.value} - {roundPercentage(d.value/total)}%</title>\n      </path>\n    );\n  }\n}\n\nfunction roundNumber(number) {\n  return Math.round(100*number)/100;\n}\n\nfunction roundPercentage(number) {\n  return Math.round(10000*number)/100;\n}\n"]},"metadata":{},"sourceType":"module"}